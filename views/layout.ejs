<!DOCTYPE html>
<html>
<head>
<title><%= title %></title>

<!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
<!--[if lt IE 9]>
<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->

<!-- Le styles -->
<link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet">
<link href="/bootstrap/css/bootstrap-responsive.min.css" rel="stylesheet">
<link href="/stylesheets/style.css" rel="stylesheet">

<!-- JavaScript -->    
<script src="http://www.google.com/jsapi"></script>
<script>
  google.load("swfobject", "2.1");
  google.load("jquery", "1");
</script>
<script src="/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript">
<!--
var ytplayer = undefined;
var video_id = "<%= video_id %>";
var video_title = "sample";
var soundVolume = 50;

var searchCond = {}; // 検索条件
var searchCount = 10;  // 画面に表示する件数

//  song list (search result, play list)  //
var idSrchList = new Array();
var idPlayList  = new Array();
var titleSrchList = new Array();
var titlePlayList  = new Array();

var isSearchResult = true;
var idList = idSrchList;
var titleList = titleSrchList;
var listNum = searchCount;

var list_index = 0;  // 画面に表示する件数


// プレーヤの準備が完了したときのコールバック
function onYouTubePlayerReady(playerId) {
  console.log("onYouTubePlayerReady");
  if(playerId == "ytplayer1"){  
    ytplayer = document.getElementById("myytplayer1");  //サンプル動画
    ytplayer.addEventListener("onStateChange", "onytplayerStateChange");

    video_id = "<%= video_id %>";
    console.log("video_id = " + video_id);
    ytplayer.loadVideoById(video_id);
    play();
  }
}
// 再生
function play() {
  if (ytplayer) {
    ytplayer.playVideo();
    ytplayer.setVolume(soundVolume);
  }
}

// ミュート
function mute() {
  if (ytplayer) {
    if (ytplayer.isMuted()) {
      ytplayer.unMute();
      $("#mute").html("Sound OFF");
    } else {
      ytplayer.mute();
      $("#mute").html("Sound ON");
    }
  }
}

function changeVolume(offset) {
  soundVolume += offset;
  soundVolume = Math.max(0, Math.min(soundVolume,100) );
  if (ytplayer) {
    ytplayer.setVolume(soundVolume);
  }
}

// 再生状態が変化したときのコールバック
function onytplayerStateChange(newState) {
  console.log("Player's new state: " + newState);
  if (newState == 0) {
    if (ytplayer) {
      if(list_index < listNum - 1) {
        videoUpdate(list_index+1);
      }
    }
  }
}


// --- 初期化 ---
$(function(){
  // --- イベントハンドラ ---
  // 検索
  $("#frmSearch").submit(function(){
    searchNew({"keyword": $("#keyword").val()});
    $("#keyword").select();
    return false;
  });

  // 前へ
  $("#back").click(function(){
    if (searchCond.page <= 1) return;
    searchHistory({"page": searchCond.page-1});
  });

  // 次へ
  $("#next").click(function(){
    if (searchCond.page*searchCount+1 > searchCond.total) return;
    searchHistory({"page": searchCond.page+1});
  });

  $("#createList").click(function(){
    createPlaylist();
  });

  $("#deleteList").click(function(){
    deletePlaylist();
  });

  $("#addSong").click(function(){
    addSong();
  });

  $("#addSong2").click(function(){
    addSong();
  });

  $("#deleteSong").click(function(){
    deleteSong();
  });

  // クリア
  $("#clear").click(function(){
    clearHistory();
    $("#history > ul").empty();
    $("#videos").empty();
    $("#result").empty();
  });

  getPlaylists();
  sendHistory('');
  // --- 初期処理 ---
  // 検索テキストボックスをフォーカス
  $("#keyword").focus();
});

//  --  searchResult <-> playList  --
function switchList(toSearchResult)
{
  var prevIsSearchResult = isSearchResult;
  isSearchResult = toSearchResult;
  if(isSearchResult == true) {  //
    listNum = searchCount;
    idList = idSrchList;
    titleList = titleSrchList;
  } else {
    listNum = idPlayList.length;
    idList = idPlayList;
    titleList = titlePlayList;
  }
  var isSwitched = (prevIsSearchResult != isSearchResult);
  return isSwitched;
}

function videoUpdate(index)
{
  list_index = index;
  video_id = idList[index];
  video_title = titleList[index];
  $("#video_title").html(video_title);
  ytplayer.loadVideoById(video_id);
  play();
}

// --- 新規検索 ---
function searchNew(cond) {
  search({
    "keyword": cond.keyword,
    "page": 1,
    "orderby": "viewCount",
    "fromHistory": false
  });
}

// --- 履歴検索 ---
function searchHistory(cond) {
  if ($("#history li").size() == 0) return;
  search($.extend({}, searchCond, cond, {"fromHistory": true}));
}

// --- 検索 ---
function search(cond) {
  //  clear array  //
  idSrchList.length = 0;
  titleSrchList.length = 0;
  // 検索条件の検査
  if (cond == null) return;
  if (cond.keyword == null || cond.keyword.length == 0) {
    alert("search failed : no keyword");
    return;
  }

  // 検索取得開始インデックス
  var index = (cond.page-1)*searchCount+1;

  // 検索条件の保存
  $.extend(searchCond, cond);

  // サムネイル表示を初期化
  $("#videos").text("Loading...");

  // ajax通信定義
  $.ajax({
    dataType: "jsonp",
    data: {
      "vq": cond.keyword,
      "orderby": cond.orderby,
      "start-index": index,
      "max-results": searchCount,
      "category": "Music",
      "alt":"json-in-script"
    },
    cache: true,
    url: "http://gdata.youtube.com/feeds/api/videos",
    success: function (data) {
      // サムネイル表示をクリア
      $("#videos").empty();

      // 検索結果件数を取得・表示
      searchCond.total = parseInt(data.feed.openSearch$totalResults.$t,10);
      showTotal(index, searchCond.total);

      // 検索結果が0件
      if (searchCond.total == 0) {
        alert("invalid keyword : no videos matched.");
        return;
      }

      // エントリを参照してサムネイルを生成
      $.each(data.feed.entry, function(i,item){
        var group = item.media$group;
        var cur_id = item.id.$t.slice(-11);
        $("<li/>")
        .addClass("result")
        .append("<i class='icon-music'/>")
        .append(item.title.$t)
        .append(
          $("<span/>")
          .addClass("info")
          .html("<br>&emsp;ViewCount:" + ((item.yt$statistics == null) ? "0" : item.yt$statistics.viewCount)))
        .click(function(){
          $("#videos > .selected").removeClass("selected");
          $(this).addClass("selected");
          switchList(true);
          videoUpdate(i);
        })
        .appendTo("#videos");
        idSrchList.push(item.id.$t.slice(-11));
        titleSrchList.push(item.title.$t);
      });

      //  play with keyword  //
      switchList(true);
      videoUpdate(0);

      // 検索履歴に追加
      if (!cond.fromHistory) {
        console.log(cond.keyword);
        sendHistory(cond.keyword);
      }
    }
  });
}

// --- 検索結果件数表示 ---
function showTotal(index, total) {
  $("#result").text(
      ((total == 0) ? 0 : index)
      + " - "
      + (index+searchCount > total ? total : index+searchCount-1)
      + " / "
      + total
      + "件"
      );
}

// --- 検索履歴追加 ---
function sendHistory(keyword) {
  var sndParams = {
    key: keyword
  };
  $.get('/history', sndParams, function(data){
    console.log("response data = " + data);
    //var newkey = data.hists[0];
    //$("#video_title").html(keyword);
    $("#history > ul").empty();

    for(var i in data.hists) {
    $("<li/>")
    .append("<i class='icon-book'/>")
    .append($("<span/>").addClass("key").append(data.hists[i]))
    .click(function(){
      searchHistory({
        "keyword":data.hists[i],
        "page":1,
        "orderby":"viewCount"});
    })
    .prependTo("#history > ul");
    }

  });
}

function clearHistory() {
  var sndParams = {
    noitem: 'nothing'
  };
  $.get('/clear', sndParams, function(data){
    $("#history > ul").empty();
  });
}

function getPlaylists()
{
  var sndParams = {
  };
  $("#playlists").empty();
  $.get('/getTables', sndParams, function(data){
    for(var i in data.playlists) {
      $("<li/>")
      .addClass("result")
      .append("<i class='icon-heart'/>")
      .append(data.playlists[i])
      .click(function(){
        $("#playlists > .selected").removeClass("selected");
        $(this).addClass("selected");
        getSongs();
        console.log("getPlaylists : selected = " + $(this).text());
      })
      .appendTo("#playlists");
      console.log("getPlaylists : push = " + data.playlists[i]);
    }
  });
}

function createPlaylist()
{
  var keyword = window.prompt("Enter new playlist name:");
  if(keyword == null || keyword == "") {
    alert("canceled");
    return;
  }
  var sndParams = {
    key: keyword
  };
  $.get('/createTable', sndParams, function(data){
    done();
  });
  var done = function() {
    getPlaylists();
  };
}

function deletePlaylist()
{
  var targetList = $("#playlists > .selected");
  console.log(targetList);
  if(targetList.length == 0) {
    alert("no playlist selected");
  }
  var listName = targetList.text();
  var sndParams = {
    key: listName
  };
  $.get('/dropTable', sndParams, function(data){
    $("#songs").empty();
    done();
  });
  var done = function() {
    getPlaylists();
  };
}

//  --  songs  --
function getSongs()
{
  var targetList = $("#playlists > .selected");
  console.log(targetList);
  if(targetList.length == 0) {
    alert("no playlist selected");
  }
  var listName = targetList.text();
  var sndParams = {
    key: listName
  };
  $("#songs").empty();
  //  clear array  //
  idPlayList.length = 0;
  titlePlayList.length = 0;
  $.get('/getElements', sndParams, function(data){
    console.log("data len : " + data.songs.length);
    for(var i in data.songs) {
      $("<li/>")
      .addClass("result")
      .attr("yt_key", data.songs[i].id)
      .append("<i class='icon-music'>")
      .append(data.songs[i].title)
      .click(function(){
        $("#songs > .selected").removeClass("selected");
        $(this).addClass("selected");
        switchList(false);
        videoUpdate($("#songs > li").index(this));
      })
      .appendTo("#songs");
      idPlayList.push(data.songs[i].id);
      titlePlayList.push(data.songs[i].title);
    }
    console.log("getSongs : titlePlayList = " + titlePlayList);
  });
}

function addSong()
{
  var targetList = $("#playlists > .selected");
  console.log("addsong(target) = " + targetList);
  if(targetList.length == 0) {
    alert("no playlist selected");
    return;
  }
  var listName = targetList.text();
  console.log("def : add songs to " + listName);
  var sndParams = {
    playlist: listName,
    yt_key: "" + video_id,
    title: "" + video_title
  };
  console.log("addSong : sndParam = " + sndParams);
  $.get('/addElements', sndParams, function(data){
    done();
  });
  var done = function() {
    getSongs();
  };
}

function deleteSong()
{
  var targetList = $("#playlists > .selected");
  console.log("deleteSong : target = " + targetList);
  if(targetList.length == 0) {
    alert("no playlist selected");
    return;
  }
  var listName = targetList.text();
  console.log("def : delete songs from " + listName);
  var sndParams = {
    playlist: listName,
    yt_key: "" + video_id,
  };
  console.log(sndParams);
  $.get('/deleteElements', sndParams, function(data){
    done();
  });
  var done = function() {
    getSongs();
  };
}

//-->


</script>

</head>
<body>
<%- body %>
</body>
</html>
